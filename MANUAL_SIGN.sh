#!/bin/bash
# Manuelle Schritte zum Signieren und Analysieren der Transaktion

echo "=========================================="
echo "SCHRITT 1: Transaktion signieren"
echo "=========================================="
echo ""
echo "Führen Sie aus:"
echo "  cd /home/alexander/cascoin-electrum"
echo "  ./electrum-env signtransaction \"\$(cat /tmp/tx.txt)\""
echo ""
echo "→ Geben Sie Ihr Passwort ein"
echo "→ Kopieren Sie die Ausgabe (signierte PSBT) nach /tmp/signed_tx.txt"
echo ""
echo "=========================================="
echo "SCHRITT 2: Signierte TX analysieren"
echo "=========================================="
echo ""
echo "Nachdem Sie die signierte TX haben, führen Sie aus:"
echo ""
echo "  cd /home/alexander/cascoin-electrum"
echo "  python3 << 'EOF'"
echo "import sys"
echo "sys.path.insert(0, '.')"
echo "from electrum.transaction import tx_from_any"
echo ""
echo "with open('/tmp/signed_tx.txt', 'r') as f:"
echo "    signed = f.read().strip()"
echo ""
echo "tx = tx_from_any(signed, deserialize=True)"
echo "inp = tx.inputs()[0]"
echo ""
echo "print('SIGNED TRANSACTION:')"
echo "print(f'  Complete: {tx.is_complete()}')"
echo "print(f'  Witness: {inp.witness.hex() if inp.witness else \"None\"}')"
echo ""
echo "if inp.witness:"
echo "    # Parse witness"
echo "    wit = inp.witness"
echo "    sig_len = wit[0]"
echo "    signature = wit[1:1+sig_len]"
echo "    print(f'\\nSIGNATURE:')"
echo "    print(f'  Full: {signature.hex()}')"
echo "    print(f'  DER: {signature[:-1].hex()}')"
echo "    print(f'  SIGHASH byte: 0x{signature[-1]:02x}')"
echo "EOF"
echo ""
echo "=========================================="
echo "SCHRITT 3: Transaktion broadcasten"
echo "=========================================="
echo ""
echo "Um die Transaktion zu senden:"
echo "  ./electrum-env broadcast \"\$(cat /tmp/signed_tx.txt | grep -v '^{')\" "
echo ""
echo "ODER verwenden Sie das GUI und klicken Sie auf 'Broadcast'"

